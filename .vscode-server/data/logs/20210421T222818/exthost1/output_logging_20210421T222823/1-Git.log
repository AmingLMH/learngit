正在查找 Git: git
将使用位于 git 的 Git 2.25.1
Opening repository for path='/home/liumignhao/STEP-BY-STEP' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_layouts' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/.jekyll-cache' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/Gemfile' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_authors' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_config.yml' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_data' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_includes' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_layouts' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_posts' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_sass' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/_site' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/about.md' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/liumignhao/STEP-BY-STEP/assets' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/liumignhao/STEP-BY-STEP/blog.html' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/liumignhao/STEP-BY-STEP/index.html' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/liumignhao/STEP-BY-STEP/staff.html' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/liumignhao/STEP-BY-STEP/test.md' failed; ex=Error: spawn ENOTDIR
> git rev-parse --git-dir
Open repository: /home/liumignhao/STEP-BY-STEP
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :_layouts/post.html
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git check-ignore -v -z --stdin
> git status -z -u
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git symbolic-ref --short HEAD
> git show --textconv :_layouts/post.html
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git cat-file -s d4947573b06ec891f2c213dd24fda49a46bfea3f
> git show --textconv :_layouts/post.html
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/master refs/remotes/master
> git cat-file -s d4947573b06ec891f2c213dd24fda49a46bfea3f
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git show --textconv :_layouts/post.html
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/master refs/remotes/master
> git cat-file -s d4947573b06ec891f2c213dd24fda49a46bfea3f
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git show --textconv :_layouts/post.html
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/main refs/remotes/main
> git cat-file -s d4947573b06ec891f2c213dd24fda49a46bfea3f
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git show --textconv :_layouts/post.html
> git config --get commit.template
> git status -z -u
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git cat-file -s d4947573b06ec891f2c213dd24fda49a46bfea3f
> git symbolic-ref --short HEAD
> git show --textconv :_layouts/post.html
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_layouts/post.html
> git symbolic-ref --short HEAD
> git cat-file -s d4947573b06ec891f2c213dd24fda49a46bfea3f
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/main refs/remotes/main
> git show --textconv :_layouts/post.html
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git show --textconv :_config.yml
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/_config.yml
> git cat-file -s 551fc521132567059c93b42ed802e54202e822ed
> git show --textconv :about.md
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/about.md
> git cat-file -s 8b218dffb22c4b192123de15488082dbb10ae2d1
> git show --textconv :test.md
> git ls-files --stage -- /home/liumignhao/STEP-BY-STEP/test.md
> git cat-file -s 4594a4254f5032e8f24f42adac5ba9db6f09908d
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(upstream:track)%00%(objectname) refs/heads/main refs/remotes/main
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
